export declare const abbrMap: {
    readonly ac: "align-content";
    readonly ai: "align-items";
    readonly as: "align-self";
    readonly d: "display";
    readonly am: "animation";
    readonly 'am-delay': "animation-delay";
    readonly 'am-drt': "animation-direction";
    readonly 'am-dur': "animation-duration";
    readonly 'am-fill': "animation-fill-mode";
    readonly 'am-count': "animation-iteration-count";
    readonly 'am-name': "animation-name";
    readonly 'am-play': "animation-play-state";
    readonly 'am-timefun': "animation-timing-function";
    readonly bg: "background-color";
    readonly 'bg-pos': "background-position";
    readonly 'bg-size': "background-size";
    readonly 'bg-repeat': "background-repeat";
    readonly 'bg-clip': "background-clip";
    readonly 'bg-origin': "background-origin";
    readonly 'bg-blend': "background-blend-mode";
    readonly bd: "border";
    readonly bdl: "border-left";
    readonly bdt: "border-top";
    readonly bdr: "border-right";
    readonly bdb: "border-bottom";
    readonly bdw: "border-width";
    readonly bdc: "border-color";
    readonly 'bd-spacing': "border-spacing";
    readonly 'bd-collapse': "border-collapse";
    readonly 'bd-img': "border-image";
    readonly br: "border-radius";
    readonly ol: "outline";
    readonly 'ol-width': "outline-width";
    readonly 'ol-color': "outline-color";
    readonly 'ol-style': "outline-style";
    readonly 'ol-offset': "outline-offset";
    readonly sd: "box-shadow";
    readonly sz: "box-sizing";
    readonly c: "color";
    readonly cs: "cursor";
    readonly 'cn-type': "container-type";
    readonly cn: "container";
    readonly 'cn-name': "container-name";
    readonly cols: "columns";
    readonly 'col-gap': "column-gap";
    readonly 'row-gap': "row-gap";
    readonly gap: "gap";
    readonly fx: "flex";
    readonly 'fx-basis': "flex-basis";
    readonly basis: "flex-basis";
    readonly wrap: "flex-wrap";
    readonly drt: "flex-direction";
    readonly flow: "flex-flow";
    readonly grow: "flex-grow";
    readonly shrink: "flex-shrink";
    readonly gd: "grid";
    readonly 'gd-area': "grid-area";
    readonly 'gd-auto-cols': "grid-auto-columns";
    readonly 'gd-auto-flow': "grid-auto-flow";
    readonly 'gd-auto-rows': "grid-auto-rows";
    readonly 'gd-col': "grid-column";
    readonly 'gd-col-end': "grid-column-end";
    readonly 'gd-col-gap': "grid-column-gap";
    readonly 'gd-col-start': "grid-column-start";
    readonly 'gd-gap': "grid-gap";
    readonly 'gd-row': "grid-row";
    readonly 'gd-row-end': "grid-row-end";
    readonly 'gd-row-gap': "grid-row-gap";
    readonly 'gd-row-start': "grid-row-start";
    readonly 'gd-temp': "grid-template";
    readonly 'gd-temp-areas': "grid-template-areas";
    readonly 'gd-temp-cols': "grid-template-columns";
    readonly 'gd-temp-rows': "grid-template-rows";
    readonly jc: "justify-content";
    readonly ji: "justify-items";
    readonly js: "justify-self";
    readonly pc: "place-content";
    readonly pi: "place-items";
    readonly ps: "place-self";
    readonly fm: "font-family";
    readonly fs: "font-size";
    readonly fw: "font-weight";
    readonly fst: "font-style";
    readonly fv: "font-variant";
    readonly ffs: "font-feature-settings";
    readonly lh: "line-height";
    readonly 'let-sp': "letter-spacing";
    readonly 'word-sp': "word-spacing";
    readonly 'tx-ali': "text-align";
    readonly 'tx-decor': "text-decoration";
    readonly 'tx-ind': "text-indent";
    readonly 'tx-jtf': "text-justify";
    readonly 'tx-ovf': "text-overflow";
    readonly 'tx-sd': "text-shadow";
    readonly 'tx-tf': "text-transform";
    readonly 'tx-wrap': "text-wrap";
    readonly 'tx-unde-pos': "text-underline-position";
    readonly 'tx-break': "word-break";
    readonly 'tx-ws': "white-space";
    readonly 'tx-adj': "text-size-adjust";
    readonly 'tx-decor-line': "text-decoration-line";
    readonly 'tx-decor-color': "text-decoration-color";
    readonly 'tx-decor-style': "text-decoration-style";
    readonly 'tx-decor-skip': "text-decoration-skip-ink";
    readonly fil: "filter";
    readonly bf: "backdrop-filter";
    readonly '-webkit-bf': "-webkit-backdrop-filter";
    readonly mbm: "mix-blend-mode";
    readonly w: "width";
    readonly 'max-w': "max-width";
    readonly 'min-w': "min-width";
    readonly h: "height";
    readonly 'max-h': "max-height";
    readonly 'min-h': "min-height";
    readonly m: "margin";
    readonly ml: "margin-left";
    readonly mt: "margin-top";
    readonly mr: "margin-right";
    readonly mb: "margin-bottom";
    readonly p: "padding";
    readonly pl: "padding-left";
    readonly pt: "padding-top";
    readonly pr: "padding-right";
    readonly pb: "padding-bottom";
    readonly pos: "position";
    readonly l: "left";
    readonly t: "top";
    readonly r: "right";
    readonly b: "bottom";
    readonly z: "z-index";
    readonly 'obj-fit': "object-fit";
    readonly 'obj-pos': "object-position";
    readonly ar: "aspect-ratio";
    readonly ovf: "overflow";
    readonly 'ovf-x': "overflow-x";
    readonly 'ovf-y': "overflow-y";
    readonly 'scr-beh': "scroll-behavior";
    readonly 'ovscr-beh': "overscroll-behavior";
    readonly 'ovscr-beh-x': "overscroll-behavior-x";
    readonly 'ovscr-beh-y': "overscroll-behavior-y";
    readonly rs: "resize";
    readonly pe: "pointer-events";
    readonly tf: "transform";
    readonly 'tf-origin': "transform-origin";
    readonly 'tf-box': "transform-box";
    readonly 'tf-style': "transform-style";
    readonly per: "perspective";
    readonly 'per-origin': "perspective-origin";
    readonly 'backface-vis': "backface-visibility";
    readonly tsn: "transition";
    readonly 'tsn-delay': "transition-delay";
    readonly 'tsn-dur': "transition-duration";
    readonly 'tsn-prop': "transition-property";
    readonly 'tsn-fn': "transition-timing-function";
    readonly wc: "will-change";
    readonly mask: "mask";
    readonly 'mask-img': "mask-image";
    readonly '-webkit-mask': "-webkit-mask";
    readonly '-webkit-mask-img': "-webkit-mask-image";
    readonly 'clip-path': "clip-path";
    readonly '-webkit-clip-path': "-webkit-clip-path";
    readonly app: "appearance";
    readonly '-webkit-app': "-webkit-appearance";
    readonly us: "user-select";
    readonly '-webkit-sel': "-webkit-user-select";
    readonly iso: "isolation";
    readonly ct: "content";
};
export declare const breakpoints: {
    dict: Record<string, string>;
};
export declare const fontDict: {
    dict: Record<string, string>;
};
